import streamlit as st
import joblib
import pandas as pd
import datetime

# ‚úÖ Charger le bon mod√®le et les colonnes
model = joblib.load("xgb_home_credit_pipeline_streamlit.joblib")
numeric_cols, categorical_cols = joblib.load("features_used_streamlit.joblib")
all_cols = numeric_cols + categorical_cols

# Configuration de la page
st.set_page_config(page_title="Scoring client - N√©o Banque", layout="centered")
st.title("üìä √âvaluation du risque client")

# üìù Formulaire utilisateur
with st.form("formulaire"):
    nom = st.text_input("Nom", value="Dupont")
    prenom = st.text_input("Pr√©nom", value="Jean")
    naissance = st.date_input("Date de naissance", value=datetime.date(1980, 1, 1))
    statut = st.text_input("Statut", value="Cadre")  # Placeholder, non utilis√© dans le mod√®le
    revenus = st.number_input("Revenus (‚Ç¨)", value=4500)
    credit = st.number_input("Montant du cr√©dit demand√© (‚Ç¨)", value=100000)
    adresse = st.text_input("Adresse", value="123 Rue Exemple")  # Placeholder aussi
    submit = st.form_submit_button("√âvaluer le client")

# ‚öôÔ∏è Pr√©diction si formulaire soumis
if submit:
    # Construction d'un dictionnaire avec valeurs par d√©faut
    input_data = {col: 0.0 for col in all_cols}

    # Remplir avec les vraies valeurs du formulaire
    input_data["AMT_INCOME_TOTAL"] = revenus
    input_data["AMT_CREDIT"] = credit
    # Remplacer GENDER et CONTRACT_TYPE par valeurs par d√©faut ou ajout de s√©lection si souhait√©
    input_data["GENDER"] = 1  # 1 = M, 0 = F ‚Üí √† personnaliser si tu veux
    input_data["NAME_CONTRACT_TYPE"] = 0  # ex. 0 = Cash loans (√† adapter)

    # Conversion √¢ge ‚Üí DAYS_BIRTH si utilis√© (pas utilis√© dans ton mod√®le actuel)
    # input_data["DAYS_BIRTH"] = -((pd.Timestamp.today() - pd.to_datetime(naissance)).days)

    # Pr√©diction
    df = pd.DataFrame([input_data])
    proba = model.predict_proba(df)[0][1]
    decision = (
        "‚úÖ √âligible" if proba < 0.4 else
        "‚ö†Ô∏è Risque mod√©r√©" if proba < 0.7 else
        "‚ùå Risque √©lev√©"
    )

    # Affichage des r√©sultats
    st.metric("Score pr√©dictif", f"{proba:.2%}")
    st.success(f"D√©cision : {decision}")
